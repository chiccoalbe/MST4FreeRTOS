<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__m_s_t_scheduler_8h" xml:lang="en-US">
<title>MSTScheduler.h File Reference</title>
<indexterm><primary>MSTScheduler.h</primary></indexterm>
<para>

<para>Header file for the standard model adaptation library of FreeRTOS. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &quot;FreeRTOS.h&quot;<?linebreak?>#include &quot;task.h&quot;<?linebreak?>#include &quot;list.h&quot;<?linebreak?>#include &quot;timers.h&quot;<?linebreak?>#include &quot;stm32f4xx_hal.h&quot;<?linebreak?></programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="__m_s_t_scheduler_8h_1ab3716d48b08f5c9e9bd532b1f52bb368">mst_test_PERIODIC_METHOD</link>&#160;&#160;&#160;2</para>

<para>Macro to select the technique for periodic task management. </para>
</listitem>
            <listitem><para><anchor xml:id="__m_s_t_scheduler_8h_1ab3e1bcde626694b3a15c5265e2632d1e"/>#define <emphasis role="strong">mst_schedSCHEDULING_DEFAULT</emphasis>&#160;&#160;&#160;1</para>

<para>Default scheduling policy from FreeRTOS. </para>
</listitem>
            <listitem><para><anchor xml:id="__m_s_t_scheduler_8h_1ab1e4dfd847a2b77cff70f52a11d43b99"/>#define <emphasis role="strong">mst_schedSCHEDULING_RMS</emphasis>&#160;&#160;&#160;2</para>

<para>Rate-Monotonic Scheduling (RMS) policy managed by MST scheduler. </para>
</listitem>
            <listitem><para><anchor xml:id="__m_s_t_scheduler_8h_1a054e872253a5d6dda7a0fa5e1bdbecf3"/>#define <emphasis role="strong">mst_schedSCHEDULING_EDF</emphasis>&#160;&#160;&#160;3</para>

<para>Earliest-Deadline-First (EDF) scheduling policy managed by MST scheduler. </para>
</listitem>
            <listitem><para>#define <link linkend="__m_s_t_scheduler_8h_1a6cefe977c72d7ed604361ef43e822a44">mst_schedSCHEDULING_POLICY</link>&#160;&#160;&#160;<link linkend="__m_s_t_scheduler_8h_1ab1e4dfd847a2b77cff70f52a11d43b99">mst_schedSCHEDULING_RMS</link></para>

<para>Selected scheduling policy. </para>
</listitem>
            <listitem><para>#define <link linkend="__m_s_t_scheduler_8h_1a8d32b5f74e55dfd12c5aa3415e16d75e">configNUM_THREAD_LOCAL_STORAGE_POINTERS</link>&#160;&#160;&#160;3</para>

<para>Number of thread-local storage pointers. </para>
</listitem>
            <listitem><para><anchor xml:id="__m_s_t_scheduler_8h_1ab1c45ea62248c332df47b9b858586ab3"/>#define <emphasis role="strong">TESTING_STM32</emphasis>&#160;&#160;&#160;1</para>

<para>Macro indicating STM32 testing environment. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="__m_s_t_scheduler_8h_1aa1da0320aadb954f0b613dde3b26d82a">vMSTSchedulerInit</link> (void)</para>

<para>Includes the HAL library for STM32F4 boards. </para>
</listitem>
            <listitem><para>void <link linkend="__m_s_t_scheduler_8h_1a492648b07031a66c57fb4bdd663fcd1b">vMSTSchedulerStart</link> (void)</para>

<para>Starts the MST Scheduler. </para>
</listitem>
            <listitem><para>TaskHandle_t <link linkend="__m_s_t_scheduler_8h_1a0cac2b331abbc97d11dcf768a5f1f677">vMSTPeriodicTaskCreate</link> (TaskFunction_t pvJobCode, const char *const pcName, uint16_t usStackDepth, void *pvParameters, UBaseType_t uxPriority, TaskHandle_t *pxCreatedTask, TickType_t xTaskPeriod, TickType_t xTaskDeadline, TickType_t xTaskPhase, TickType_t xTaskWCET)</para>

<para>Creates a periodic task. </para>
</listitem>
            <listitem><para>BaseType_t <link linkend="__m_s_t_scheduler_8h_1a1a94a42f8ee5ff9b422af2fe09cac749">vMSTSporadicTaskCreate</link> (TaskFunction_t pvJobCode, const char *const pcName, uint16_t usStackDepth, void *pvParameters, UBaseType_t uxPriority, TaskHandle_t *pxCreatedTask, TickType_t xTaskInterarrivalTime, TickType_t xTaskDeadline, TickType_t xTaskWCET)</para>

<para>Creates a sporadic task. </para>
</listitem>
            <listitem><para>BaseType_t <link linkend="__m_s_t_scheduler_8h_1a17d15fad92b9b2a43d0d645d6d021e7a">vMSTSporadicTaskRun</link> (TaskHandle_t *pxTaskToRunHandle)</para>

<para>Runs a sporadic job if the interarrival time has passed. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Header file for the standard model adaptation library of FreeRTOS. </para>

<para><formalpara><title>Author</title>

<para>Enrico Alberti </para>
</formalpara>
<formalpara><title>Date</title>

<para>2024 </para>
</formalpara>
This file contains definitions and function prototypes for the Model-Specific Task (MST) scheduler library, which extends FreeRTOS to include additional scheduling policies and support for periodic and sporadic tasks. </para>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__m_s_t_scheduler_8h_1a8d32b5f74e55dfd12c5aa3415e16d75e"/><section>
    <title>configNUM_THREAD_LOCAL_STORAGE_POINTERS</title>
<indexterm><primary>configNUM_THREAD_LOCAL_STORAGE_POINTERS</primary><secondary>MSTScheduler.h</secondary></indexterm>
<indexterm><primary>MSTScheduler.h</primary><secondary>configNUM_THREAD_LOCAL_STORAGE_POINTERS</secondary></indexterm>
<para><computeroutput>#define configNUM_THREAD_LOCAL_STORAGE_POINTERS&#160;&#160;&#160;3</computeroutput></para><para>

<para>Number of thread-local storage pointers. </para>
</para>

<para>Default is set to 3 if not defined elsewhere. </para>
</section>
<anchor xml:id="__m_s_t_scheduler_8h_1a6cefe977c72d7ed604361ef43e822a44"/><section>
    <title>mst_schedSCHEDULING_POLICY</title>
<indexterm><primary>mst_schedSCHEDULING_POLICY</primary><secondary>MSTScheduler.h</secondary></indexterm>
<indexterm><primary>MSTScheduler.h</primary><secondary>mst_schedSCHEDULING_POLICY</secondary></indexterm>
<para><computeroutput>#define mst_schedSCHEDULING_POLICY&#160;&#160;&#160;<link linkend="__m_s_t_scheduler_8h_1ab1e4dfd847a2b77cff70f52a11d43b99">mst_schedSCHEDULING_RMS</link></computeroutput></para><para>

<para>Selected scheduling policy. </para>
</para>

<para>Default is RMS scheduling policy. </para>
</section>
<anchor xml:id="__m_s_t_scheduler_8h_1ab3716d48b08f5c9e9bd532b1f52bb368"/><section>
    <title>mst_test_PERIODIC_METHOD</title>
<indexterm><primary>mst_test_PERIODIC_METHOD</primary><secondary>MSTScheduler.h</secondary></indexterm>
<indexterm><primary>MSTScheduler.h</primary><secondary>mst_test_PERIODIC_METHOD</secondary></indexterm>
<para><computeroutput>#define mst_test_PERIODIC_METHOD&#160;&#160;&#160;2</computeroutput></para><para>

<para>Macro to select the technique for periodic task management. </para>
</para>

<para>Options:<itemizedlist>
<listitem>
<para>1: Using FreeRTOS delays.</para>
</listitem><listitem>
<para>2: Using software timers. </para>
</listitem></itemizedlist>
</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="__m_s_t_scheduler_8h_1a0cac2b331abbc97d11dcf768a5f1f677"/><section>
    <title>vMSTPeriodicTaskCreate()</title>
<indexterm><primary>vMSTPeriodicTaskCreate</primary><secondary>MSTScheduler.h</secondary></indexterm>
<indexterm><primary>MSTScheduler.h</primary><secondary>vMSTPeriodicTaskCreate</secondary></indexterm>
<para><computeroutput>TaskHandle_t vMSTPeriodicTaskCreate (TaskFunction_t pvJobCode, const char *const pcName, uint16_t usStackDepth, void * pvParameters, UBaseType_t uxPriority, TaskHandle_t * pxCreatedTask, TickType_t xTaskPeriod, TickType_t xTaskDeadline, TickType_t xTaskPhase, TickType_t xTaskWCET)</computeroutput></para><para>

<para>Creates a periodic task. </para>
</para>

<para>Adds standard model parameters to handle periodic tasks in addition to the parameters used by FreeRTOS.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>pvJobCode</entry><entry>
<para>Pointer to the function that implements the job. </para>
</entry>
                            </row>
                            <row>
<entry>pcName</entry><entry>
<para>Descriptive name for the job. </para>
</entry>
                            </row>
                            <row>
<entry>usStackDepth</entry><entry>
<para>Length of the stack for this task, expressed in words. </para>
</entry>
                            </row>
                            <row>
<entry>pvParameters</entry><entry>
<para>Parameters passed into the job. </para>
</entry>
                            </row>
                            <row>
<entry>uxPriority</entry><entry>
<para>Priority of the job (not used if MST-specific scheduling is used). </para>
</entry>
                            </row>
                            <row>
<entry>pxCreatedTask</entry><entry>
<para>Pointer to the job handle. </para>
</entry>
                            </row>
                            <row>
<entry>xTaskPeriod</entry><entry>
<para>Period of the task in milliseconds. </para>
</entry>
                            </row>
                            <row>
<entry>xTaskDeadline</entry><entry>
<para>Relative deadline of the task in milliseconds. </para>
</entry>
                            </row>
                            <row>
<entry>xTaskPhase</entry><entry>
<para>Phase of the task in milliseconds (shift from first release). </para>
</entry>
                            </row>
                            <row>
<entry>xTaskWCET</entry><entry>
<para>Worst-case execution time of the task.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Handle to the created task. </para>
</formalpara>
</para>
</section>
<anchor xml:id="__m_s_t_scheduler_8h_1aa1da0320aadb954f0b613dde3b26d82a"/><section>
    <title>vMSTSchedulerInit()</title>
<indexterm><primary>vMSTSchedulerInit</primary><secondary>MSTScheduler.h</secondary></indexterm>
<indexterm><primary>MSTScheduler.h</primary><secondary>vMSTSchedulerInit</secondary></indexterm>
<para><computeroutput>void vMSTSchedulerInit (void )</computeroutput></para><para>

<para>Includes the HAL library for STM32F4 boards. </para>
</para>

<para>Modify this include for specific STM32 board support.</para>

<para>Initializes the MST Scheduler.</para>

<para>This function sets up the MST scheduler, preparing it to manage tasks based on the selected scheduling policy. </para>
</section>
<anchor xml:id="__m_s_t_scheduler_8h_1a492648b07031a66c57fb4bdd663fcd1b"/><section>
    <title>vMSTSchedulerStart()</title>
<indexterm><primary>vMSTSchedulerStart</primary><secondary>MSTScheduler.h</secondary></indexterm>
<indexterm><primary>MSTScheduler.h</primary><secondary>vMSTSchedulerStart</secondary></indexterm>
<para><computeroutput>void vMSTSchedulerStart (void )</computeroutput></para><para>

<para>Starts the MST Scheduler. </para>
</para>

<para>This function begins the task scheduling process using the MST framework. </para>
</section>
<anchor xml:id="__m_s_t_scheduler_8h_1a1a94a42f8ee5ff9b422af2fe09cac749"/><section>
    <title>vMSTSporadicTaskCreate()</title>
<indexterm><primary>vMSTSporadicTaskCreate</primary><secondary>MSTScheduler.h</secondary></indexterm>
<indexterm><primary>MSTScheduler.h</primary><secondary>vMSTSporadicTaskCreate</secondary></indexterm>
<para><computeroutput>BaseType_t vMSTSporadicTaskCreate (TaskFunction_t pvJobCode, const char *const pcName, uint16_t usStackDepth, void * pvParameters, UBaseType_t uxPriority, TaskHandle_t * pxCreatedTask, TickType_t xTaskInterarrivalTime, TickType_t xTaskDeadline, TickType_t xTaskWCET)</computeroutput></para><para>

<para>Creates a sporadic task. </para>
</para>

<para>Adds standard model parameters to handle sporadic tasks in addition to the parameters used by FreeRTOS.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>pvJobCode</entry><entry>
<para>Pointer to the function that implements the job. </para>
</entry>
                            </row>
                            <row>
<entry>pcName</entry><entry>
<para>Descriptive name for the job. </para>
</entry>
                            </row>
                            <row>
<entry>usStackDepth</entry><entry>
<para>Length of the stack for this task, expressed in words. </para>
</entry>
                            </row>
                            <row>
<entry>pvParameters</entry><entry>
<para>Parameters passed into the job. </para>
</entry>
                            </row>
                            <row>
<entry>uxPriority</entry><entry>
<para>Priority of the job (not used if MST-specific scheduling is used). </para>
</entry>
                            </row>
                            <row>
<entry>pxCreatedTask</entry><entry>
<para>Pointer to the job handle. </para>
</entry>
                            </row>
                            <row>
<entry>xTaskInterarrivalTime</entry><entry>
<para>Minimum spacing between releases in milliseconds. </para>
</entry>
                            </row>
                            <row>
<entry>xTaskDeadline</entry><entry>
<para>Relative deadline of the task in milliseconds. </para>
</entry>
                            </row>
                            <row>
<entry>xTaskWCET</entry><entry>
<para>Worst-case execution time of the task.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>pdPASS if the task was created successfully </para>

<para>pdFAIL otherwise </para>
</formalpara>
</para>
</section>
<anchor xml:id="__m_s_t_scheduler_8h_1a17d15fad92b9b2a43d0d645d6d021e7a"/><section>
    <title>vMSTSporadicTaskRun()</title>
<indexterm><primary>vMSTSporadicTaskRun</primary><secondary>MSTScheduler.h</secondary></indexterm>
<indexterm><primary>MSTScheduler.h</primary><secondary>vMSTSporadicTaskRun</secondary></indexterm>
<para><computeroutput>BaseType_t vMSTSporadicTaskRun (TaskHandle_t * pxTaskToRunHandle)</computeroutput></para><para>

<para>Runs a sporadic job if the interarrival time has passed. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>pxTaskToRunHandle</entry><entry>
<para>Handle to the task to be run.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>pdFAIL if the task was never created. </para>

<para>pdPASS if the task ran successfully. </para>
</formalpara>
</para>
</section>
</section>
</section>
